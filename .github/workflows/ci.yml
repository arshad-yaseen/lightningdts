name: CI
env:
  DEBUG: napi:*
  APP_NAME: lightningdts
  MACOSX_DEPLOYMENT_TARGET: '10.13'
  CARGO_INCREMENTAL: '1'
permissions:
  contents: read
  id-token: write
'on':
  pull_request:
  push:
    branches:
      - "**"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install dependencies
        run: bun install

      - name: Biome lint
        run: bun run lint

      - name: Cargo fmt
        run: cargo fmt -- --check

      - name: Clippy
        run: cargo clippy

  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: aarch64-apple-darwin
            build: bun run build --target aarch64-apple-darwin
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: bun run build --target x86_64-unknown-linux-gnu --use-napi-cross
          - host: windows-latest
            build: bun run build --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
    name: test-build - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version: 22

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.napi-rs
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Install dependencies
        run: bun install
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-bindings-${{ matrix.settings.target }}
          path: '*.node'
          if-no-files-found: error

  test-bindings:
    name: Test bindings on ${{ matrix.settings.target }} - node@${{ matrix.node }}
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            architecture: x64
          - host: macos-latest
            target: aarch64-apple-darwin
            architecture: arm64
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            architecture: x64
        node:
          - '22'
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup bun
        uses: oven-sh/setup-bun@v2
      - name: Setup node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.settings.architecture }}
      - name: Install dependencies
        run: bun install
      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: test-bindings-${{ matrix.settings.target }}
          path: .
      - name: List packages
        run: ls -R .
        shell: bash
      - name: Test bindings
        run: bun test
